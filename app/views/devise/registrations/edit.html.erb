<div class="container">
  <div class="row">
    <div class="col-10 offset-1 col col-md-6 offset-md-3">
      <h1>Edit <%= resource_name.to_s.humanize %></h1>

      <%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
        <%= f.error_notification %>

        <div class="form-inputs">
          <div class="d-flex justify-content-between">
            <div style="flex: 0 0 45%"><%= f.input :first_name %></div>
            <div style="flex: 0 0 45%"><%= f.input :last_name %></div>
          </div>
          <%= f.input :email, required: true, autofocus: true, input_html: { autocomplete: "email" } %>

          <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
            <p>Currently waiting confirmation for: <%= resource.unconfirmed_email %></p>
          <% end %>

          <%= f.input :password,
                      hint: "leave it blank if you don't want to change it",
                      required: false,
                      input_html: { autocomplete: "new-password" } %>
          <%= f.input :password_confirmation,
                      required: false,
                      input_html: { autocomplete: "new-password" } %>
          <%= f.input :current_password,
                      hint: "we need your current password to confirm your changes",
                      required: true,
                      input_html: { autocomplete: "current-password" } %>
          <%= f.input :home_city, label: 'Home city', placeholder: 'Current city', onkeypress: "return event.keyCode!=13" %>
          <%= f.input :latitude, as: :hidden %>
          <%= f.input :longitude, as: :hidden %>
          <%= f.input :phone_number %>
          <%= f.input :photo, as: :file, input_html: { class: 'd-none', id: 'photo-input' }, label_html: { class: 'upload-photo'}, label: 'ðŸ“· Upload a profile photo' %>
        </div>
        <div id="photo-preview"></div>
        <div class="form-actions">
          <%= f.button :submit, "Update", class: 'btn-flat mb-4', style: "width: 100%;" %>
        </div>
      <% end %>

      <!-- <h3>Cancel my account</h3>

      <p>Unhappy? <%#= link_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete %></p> -->

      <%#= link_to "Back", :back %>

    </div>
  </div>
</div>
<button style="display: none;" id="open" data-toggle="modal" data-target="#photoModal"></button>
<div class="modal fade bd-example-modal-lg" id="photoModal" tabindex="-1" role="dialog" aria-labelledby="photoModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header justify-content-center">
        <h5 class="modal-title" id="photoModalLabel">Crop profile photo</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="display: none;" id="closeModal">
        </button>
      </div>
      <div class="modal-body text-center">
        <canvas id="canvas" style="width: 400px;">
        </canvas>
      </div>
      <div class="modal-footer justify-content-around">
        <button id='btnCrop'>Crop</button>
        <button id='btnReset'>Reset</button>
      </div>
    </div>
  </div>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&libraries=places&callback=initMap" async defer></script>
<script>
  function initMap() {
    var input = document.getElementById('user_home_city');
    var autocomplete = new google.maps.places.Autocomplete(input, {types: ['(cities)']});
    autocomplete.setFields(['geometry', 'name']);
    autocomplete.addListener('place_changed', fillInForm);
    function fillInForm() {
      var place = autocomplete.getPlace()
Â  Â  if (!place.geometry) {
Â  Â  Â  // User entered the name of a Place that was not suggested and
Â  Â  Â  // pressed the Enter key, or the Place Details request failed.
Â  Â  Â  window.alert("No details available for input: '" + place.name + "'");
Â  Â  Â  return;
Â  Â  }
Â  Â  document.getElementById('user_latitude').value = place.geometry.location.lat()
Â  Â  document.getElementById('user_longitude').value = place.geometry.location.lng()
    }
  }
</script>
